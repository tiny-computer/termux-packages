diff -u -r ../cache/apt-3.0.3/apt-pkg/contrib/hashes.cc ./apt-pkg/contrib/hashes.cc
--- ../cache/apt-3.0.3/apt-pkg/contrib/hashes.cc	2025-06-24 17:02:46.000000000 +0000
+++ ./apt-pkg/contrib/hashes.cc	2025-08-27 22:26:34.808330769 +0000
@@ -296,7 +296,7 @@
    return !(*this == other);
 }
 									/*}}}*/
-static APT_PURE std::string HexDigest(std::basic_string_view<unsigned char> const &Sum)
+static APT_PURE std::string HexDigest(std::basic_string_view<char> const &Sum)
 {
    char Conv[16] =
       {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b',
@@ -352,15 +352,15 @@
    std::string HexDigest(HashAlgo const &algo)
    {
       auto Size = EVP_MD_size(algo.evpLink());
-      unsigned char Sum[Size];
+      char Sum[Size];
 
       // We need to work on a copy, as we update the hash after creating a digest...
       auto tmpContext = EVP_MD_CTX_create();
       EVP_MD_CTX_copy(tmpContext, contexts[algo.index]);
-      EVP_DigestFinal_ex(tmpContext, Sum, nullptr);
+      EVP_DigestFinal_ex(tmpContext, (unsigned char*) Sum, nullptr);
       EVP_MD_CTX_destroy(tmpContext);
 
-      return ::HexDigest(std::basic_string_view<unsigned char>(Sum, Size));
+      return ::HexDigest(std::basic_string_view<char>(Sum, Size));
    }
 
    bool Enable(HashAlgo const &algo)
